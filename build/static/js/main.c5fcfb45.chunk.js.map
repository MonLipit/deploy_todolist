{"version":3,"sources":["TodoList.js","TodoListHeader.js","Form.js","Footer.js","App.js","index.js"],"names":["TodoList","lang","tasks","isFiltered","changeStatus","sort","timeLeft","time","distance","Date","getTime","days","Math","floor","hours","minutes","className","map","index","title","isCompleted","date","color","onClick","Header","tasksLeft","filter","task","length","Form","submitTask","newTask","useRef","onSubmit","event","preventDefault","current","value","target","reset","placeholder","ref","Footer","changeLanguage","App","path","element","Home","data","localStorage","getItem","JSON","parse","useState","setTasks","setIsFiltered","setLang","status","console","log","useEffect","setItem","stringify","TodoListHeader","tasksClone","type","splice","setDate","getDate","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.c5fcfb45.chunk.js","sourcesContent":["import { FaRegCircle, FaRegCheckCircle } from \"react-icons/fa\";\n\nconst TodoList = ({ lang, tasks, isFiltered, changeStatus, sort }) => {\n  const timeLeft = (time) => {\n    const distance = new Date(time).getTime() - new Date().getTime();\n    let days = Math.floor(distance / (1000 * 60 * 60 * 24));\n    let hours = Math.floor(\n      (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n    );\n    let minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n    if (lang === \"vi\") {\n      return ` còn lại ${days} ngày, ${hours} giờ, ${minutes} phút`;\n    }\n    return ` ${days} day${(days > 1 || days === 0) && \"s\"}, ${hours} hour${\n      (hours > 1 || hours === 0) && \"s\"\n    }, ${minutes} minute${(minutes > 1 || minutes === 0) && \"s\"} left`;\n  };\n  return (\n    <div className=\"todo-list-container\">\n      {tasks.map(({ title, isCompleted, date }, index) => (\n        <div\n          key={index}\n          className={`todo-item-container ${(isCompleted && \"done\") || \"\"} ${\n            (isFiltered && isCompleted && \"hidden\") || \"\"\n          }`}\n        >\n          {isCompleted ? (\n            <FaRegCheckCircle\n              color=\"#9a9a9a\"\n              className=\"item-done-button\"\n              onClick={() => changeStatus(index)}\n            />\n          ) : (\n            <FaRegCircle\n              className=\"item-done-button\"\n              color=\"#9a9a9a\"\n              onClick={() => changeStatus(index)}\n            />\n          )}\n          <div className=\"item-title\">\n            <span>{title}</span> -<span>{timeLeft(date)}</span>\n          </div>\n          <div>\n            <span className=\"sort\" onClick={() => sort(index, \"up\")}>\n              ⬆️\n            </span>\n            <span className=\"sort\" onClick={() => sort(index, \"down\")}>\n              ⬇️\n            </span>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TodoList;\n","const Header = ({ lang, tasks }) => {\n  const tasksLeft = tasks.filter((task) => !task.isCompleted).length;\n  return (\n    <div className=\"header\">\n      {lang === \"vi\"\n        ? `Bạn còn ${tasksLeft} công việc`\n        : `You have ${tasksLeft} task${\n            (tasksLeft > 1 || tasksLeft === 0) && \"s\"\n          } left!`}\n    </div>\n  );\n};\n\nexport default Header;\n","import { useRef } from \"react\";\n\nconst Form = ({ lang, submitTask }) => {\n  let newTask = useRef(null);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (newTask.current.value) {\n      submitTask(newTask.current.value);\n      event.target.reset();\n    }\n  };\n  return (\n    <form className=\"form\" onSubmit={handleSubmit}>\n      <input\n        placeholder={lang === \"en\" ? \"Enter task ...\" : \"Nhập\"}\n        ref={newTask}\n      />\n      <button>{lang === \"en\" ? \"Submit\" : \"Tạo mới\"}</button>\n    </form>\n  );\n};\n\nexport default Form;\n","const Footer = ({ lang, changeLanguage }) => {\n  return (\n    <div>\n      <h3>Made by MindX 🔥</h3>\n      <div>\n        <span>Available on:</span>\n        <span\n          className={`languague-picker ${(lang === \"vi\" && \"selected\") || \"\"} `}\n          onClick={() => changeLanguage(\"vi\")}\n        >\n          🇻🇳\n        </span>\n        <span\n          className={`languague-picker ${(lang === \"en\" && \"selected\") || \"\"} `}\n          onClick={() => changeLanguage(\"en\")}\n        >\n          🇺🇸\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import \"./styles.css\";\nimport TodoList from \"./TodoList\";\nimport TodoListHeader from \"./TodoListHeader\";\nimport Form from \"./Form\";\nimport Footer from \"./Footer\";\nimport { Routes, Route } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport { FaRegCircle, FaRegCheckCircle } from \"react-icons/fa\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n      </Routes>\n    </div>\n  );\n}\n\nconst Home = () => {\n  let data = localStorage.getItem(\"tasks\")\n    ? JSON.parse(localStorage.getItem(\"tasks\"))\n    : [];\n  const [tasks, setTasks] = useState(data);\n\n  const [isFiltered, setIsFiltered] = useState(false);\n\n  const [lang, setLang] = useState(\"en\");\n\n  const submitTask = (newTask) => {\n    let date = new Date(new Date());\n    date.setDate(date.getDate() + 1);\n    setTasks([...tasks, { title: newTask, isCompleted: false, date }]);\n  };\n\n  const changeStatus = (index) => {\n    const tasksClone = [...tasks];\n    tasksClone[index].isCompleted = !tasksClone[index].isCompleted;\n    setTasks([...tasksClone]);\n  };\n\n  const filter = (status) => {\n    console.log(222);\n\n    setIsFiltered(status);\n  };\n\n  const changeLanguage = (lang) => {\n    setLang(lang);\n  };\n\n  const saveData = () => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  };\n\n  const sort = (index, type) => {\n    setIsFiltered(false);\n    const tasksClone = [...tasks];\n    const task = tasksClone[index];\n    if (type === \"up\") {\n      if (index === 0) {\n        return;\n      }\n      tasksClone.splice(index, 1);\n      tasksClone.splice(index - 1, 0, task);\n    } else {\n      if (index === tasks.length - 1) {\n        return;\n      }\n\n      tasksClone.splice(index + 2, 0, task);\n      tasksClone.splice(index, 1);\n    }\n    setTasks(tasksClone);\n  };\n\n  useEffect(() => {\n    saveData();\n  });\n\n  return (\n    <div className=\"App\">\n      <div className=\"todo-item-container\">\n        {isFiltered ? (\n          <FaRegCheckCircle\n            color=\"#9a9a9a\"\n            className=\"item-done-button\"\n            onClick={() => filter(false)}\n          />\n        ) : (\n          <FaRegCircle\n            className=\"item-done-button\"\n            color=\"#9a9a9a\"\n            onClick={() => filter(true)}\n          />\n        )}\n        <div className=\"item-title\">\n          {lang === \"vi\"\n            ? \"Chỉ xem công việc chưa hoàn thành\"\n            : \"Not finished only\"}\n        </div>\n      </div>\n      <div className=\"container\">\n        <TodoListHeader lang={lang} tasks={tasks} />\n        <TodoList\n          lang={lang}\n          tasks={tasks}\n          isFiltered={isFiltered}\n          changeStatus={changeStatus}\n          sort={sort}\n        />\n        <Form lang={lang} submitTask={submitTask} />\n      </div>\n      <Footer lang={lang} changeLanguage={changeLanguage} />\n    </div>\n  );\n};\n","import { createRoot } from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n"],"sourceRoot":""}